@page "/book";
@using Models;
@using Business.Repositories.IRepository;
@inject IBookRepository bookRepo;
@inject NavigationManager NavigationManager;


    <div class=" row mt-4">
        <div class="col-8">
            <h4 class="card-title text-primary">Books</h4>
        </div>

        <div class="col-3 offset-1">
            <NavLink href="book/addupdatebook" class="btn btn-primary form-control">Add new book</NavLink>
        </div>

        <div class=" row mt-4">
            <div class="col-12">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Author</th>
                            <th>Price</th>
                            <th>Details</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (booksList.Any())
                        {
                            foreach (var book in booksList)
                            {
                                <tr>
                                    <td>@book.Name</td>
                                    <td>@book.Author</td>
                                    <td>@book.Regular_price</td>
                                    <td>@book.Details</td>
                                    <td></td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="5"> No results</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    @code {

        private IEnumerable<BookDto> booksList { get; set; } = new List<BookDto>();

        protected override async Task OnInitializedAsync()
        {
            booksList = await bookRepo.GetAllBooksAsync();
        }
    }
